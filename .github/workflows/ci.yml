name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  check_formatting:
    runs-on: ubuntu-latest
    name: Check Rust formatting
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy_correctness_checks:
    runs-on: ubuntu-latest
    name: Clippy correctness checks
    steps:
      - name: Install Alsa dev library
        run: sudo apt install libasound2-dev libudev-dev
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -W clippy::correctness -D warnings

  build:
    name: Build
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, target: 'x86_64-unknown-linux-gnu' }
          - { os: macos-latest, target: 'x86_64-apple-darwin' }
          - { os: macos-latest, target: 'aarch64-apple-darwin' }
          - { os: windows-latest, target: 'x86_64-pc-windows-msvc' }
          - { os: windows-latest, target: 'i686-pc-windows-msvc' }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install \
            --allow-unauthenticated -y -qq \
              libasound2-dev \
              libudev-dev
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.config.target }}
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --locked --target ${{ matrix.config.target }}
